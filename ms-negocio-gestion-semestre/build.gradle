plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.homerios'
version = '0.0.1-SNAPSHOT'
java { sourceCompatibility = JavaVersion.VERSION_17 }

repositories { mavenCentral() }

// BOM de Spring Cloud compatible con Boot 2.7.x (Jubilee)
ext { set('springCloudVersion', "2021.0.8") }
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Driver DB: deja que Boot fije la versión
    runtimeOnly 'org.postgresql:postgresql'

    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // Observabilidad
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Dev / Test
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

// Opcional: para que @PathVariable/@RequestParam funcionen sin nombre explícito
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ['-parameters']
    options.encoding = 'UTF-8'
}

tasks.named('test') { useJUnitPlatform() }
